version: 2.1

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:8-jessie
      environment:
        PGUSER: postgres
        PGHOST: localhost
    - image: circleci/postgres:9.4-alpine-ram
      environment:
        POSTGRES_USER: postgres
    - image: circleci/redis:3.2-alpine
      environment:
        POSTGRES_USER: postgres

jobs:
  build:
    <<: *defaults  
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
    # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run: sudo apt-get update
      - run: 
          name: Install DB dependencies
          command: sudo apt-get install postgresql-client-9.4 redis-tools
      - run:
          name: Install Headless Chrome dependencies
          command: |
            sudo apt-get install -yq \
            gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
            fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Wait for redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      - run: echo "Hello World"
      - run: psql -c 'create database rm3unit;' -U postgres
      - run: psql -c "CREATE USER wirehead WITH PASSWORD 'rm3test';" -U postgres
      - run: psql -c "GRANT ALL PRIVILEGES ON database rm3unit TO wirehead;" -U postgres
      - run: psql -c "ALTER USER wirehead WITH SUPERUSER;" -U postgres
      - run: psql rm3unit < ./db-schema.sql -U postgres
      - run: npm install
      - run: npm run travis

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: ~/repo
          paths: .